function [G, H] = getHamCodes(n)
    
    % so far we support [8,4] and [72, 64] codes:
    if n ~= 8 && n ~= 72
       G=0;
       H=0;
       return;
    end

    if n == 8
    	% generator matrix
        G = [1 1 1 0 0 0 0 1
             1 0 0 1 1 0 0 1
             0 1 0 1 0 1 0 1
             1 1 0 1 0 0 1 0];

        % parity-check matrix
        H = [1 0 1 0 1 0 1 0
             0 1 1 0 0 1 1 0
             0 0 0 1 1 1 1 0
             1 1 1 1 1 1 1 1];       
         
         return;
    end
    
    % just the parity bits, we'll derive the rest from this:
     Gp = [
     1     1     0     1     0     0     0     0
     1     1     0     1     1     1     0     0
     1     1     1     0     1     1     0     0
     1     1     1     0     0     0     0     0
     1     0     0     1     1     0     0     0
     1     0     0     1     0     1     0     0
     1     0     0     1     0     0     1     0
     1     0     0     1     0     0     0     1
     0     1     1     0     1     0     0     0
     0     1     1     0     0     1     0     0
     0     1     1     0     0     0     1     0
     0     1     1     0     0     0     0     1
     1     1     0     0     1     0     0     0
     1     1     0     0     0     1     0     0
     1     1     0     0     0     0     1     0
     1     1     0     0     0     0     0     1
     0     0     1     1     1     0     0     0
     0     0     1     1     0     1     0     0
     0     0     1     1     0     0     1     0
     0     0     1     1     0     0     0     1
     1     0     1     0     1     0     0     0
     1     0     1     0     0     1     0     0
     1     0     1     0     0     0     1     0
     1     0     1     0     0     0     0     1
     0     1     0     1     1     0     0     0
     0     1     0     1     0     1     0     0
     0     1     0     1     0     0     1     0
     0     1     0     1     0     0     0     1
     1     0     1     1     0     0     0     0
     1     0     1     1     0     0     1     1
     0     1     1     1     0     0     1     1
     0     1     1     1     0     0     0     0
     0     0     0     0     1     1     1     0
     1     1     0     0     1     1     1     0
     1     1     0     0     1     1     0     1
     0     0     0     0     1     1     0     1
     1     0     0     0     1     0     1     0
     0     1     0     0     1     0     1     0
     0     0     1     0     1     0     1     0
     0     0     0     1     1     0     1     0
     1     0     0     0     0     1     0     1
     0     1     0     0     0     1     0     1
     0     0     1     0     0     1     0     1
     0     0     0     1     0     1     0     1
     1     0     0     0     1     1     0     0
     0     1     0     0     1     1     0     0
     0     0     1     0     1     1     0     0
     0     0     0     1     1     1     0     0
     1     0     0     0     0     0     1     1
     0     1     0     0     0     0     1     1
     0     0     1     0     0     0     1     1
     0     0     0     1     0     0     1     1
     1     0     0     0     0     1     1     0
     0     1     0     0     0     1     1     0
     0     0     1     0     0     1     1     0
     0     0     0     1     0     1     1     0
     1     0     0     0     1     0     0     1
     0     1     0     0     1     0     0     1
     0     0     1     0     1     0     0     1
     0     0     0     1     1     0     0     1
     0     0     0     0     0     1     1     1
     0     0     1     1     0     1     1     1
     0     0     1     1     1     0     1     1
     0     0     0     0     1     0     1     1
     ];
 
    % standard form generator and parity-check matrices
    if n == 72
        G = [eye(64), Gp];
        H = [Gp' eye(8)];
    end
end